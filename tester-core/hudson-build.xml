<project default="execute">
	
	<property environment="env"/>
	<property name="workspace"				value="${env.WORKSPACE}"/>
	<property name="tester-core.name"		value="tester-core"/>
	<property name="tester-core.dir"		value="${workspace}/${tester-core.name}"/>
	<property name="tester-core.bin.dir"	value="${workspace}/temp/${tester-core.name}"/>
	<property name="test.project.dir"		value="${workspace}/${test.project.name}" />
	<property name="test.test.project.bin.dir"	value="${workspace}/temp/${test.project.name}" />
	<xmlproperty file="${test.project.dir}/tester-config.xml" collapseAttributes="true"/>
	<property name="extension"				value="${tester-config.extension}" />
	<property name="extension.dir"			value="${workspace}/${extension}" />
	<property name="extension.bin.dir"		value="${workspace}/temp/${extension}" />
	
	<property name="jvm.args" value="" />
	<property name="tomcat.ajp.port" value="9009" />
	
	<path id="arangi-tester-classpath" description="Classpath of ${tester-core.name}-classes + ${tester-core.name}-libs">
		<pathelement path="${tester-core.dir}/src" />
		<fileset dir="${tester-core.dir}/lib" includes="**/*.jar" />
		<pathelement location="${tester-core.bin.dir}/${tester-core.name}.jar" />
		<pathelement location="${extension.bin.dir}/${extension}.jar" />
	</path>

	<path id="app-full-classpath" description="Classpath of app-classes + arangi-tester-classes + arangi-tester-libs">
		<fileset dir="${tester-core.dir}/lib" includes="**/*.jar" />
		<pathelement location="${tester-core.bin.dir}/${tester-core.name}.jar" />
		<pathelement location="${extension.bin.dir}/${extension}.jar" />
		<pathelement location="${test.test.project.bin.dir}/bin" />
	</path>

	<taskdef resource="cargo.tasks" classpathref="arangi-tester-classpath" />

	<target name="compile-tester-core">
		<delete dir="${tester-core.bin.dir}" />
		<mkdir dir="${tester-core.bin.dir}/bin" />
		<javac srcdir="${tester-core.dir}/src" destdir="${tester-core.bin.dir}/bin" encoding="UTF-8" source="1.6" target="1.6" classpathref="arangi-tester-classpath" debug="true" />
		<jar destfile="${tester-core.bin.dir}/${tester-core.name}.jar" basedir="${tester-core.bin.dir}/bin" />
	</target>

	<target name="compile-tester-extension" depends="compile-tester-core">
		<delete dir="${extension.bin.dir}" />
		<mkdir dir="${extension.bin.dir}/bin" />
		<javac srcdir="${extension.dir}/src" destdir="${extension.bin.dir}/bin" encoding="UTF-8" source="1.6" target="1.6" classpathref="arangi-tester-classpath" debug="true" />
		<jar destfile="${extension.bin.dir}/${extension}.jar" basedir="${extension.bin.dir}/bin" />
	</target>

	<target name="compile-tests" depends="compile-tester-core, compile-tester-extension">
		<delete dir="${test.project.bin.dir}" />
		<mkdir dir="${test.project.bin.dir}/bin" />
		<javac srcdir="${test.project.dir}/src" destdir="${test.project.bin.dir}/bin" encoding="UTF-8" source="1.6" target="1.6" classpathref="arangi-tester-classpath" debug="true" />
		<copy file="${test.project.dir}/src/log4j.xml" todir="${test.project.bin.dir}/bin" />
		<copy file="${test.project.dir}/src/lcc.properties" todir="${test.project.bin.dir}/bin" />
	</target>

	<target name="execute" depends="compile-tester-core, compile-tester-extension, compile-tests, start-tomcat">
		<java dir="${basedir}" classname="br.ufmg.lcc.arangitester.boot.Reactor" fork="true" classpathref="app-full-classpath">
			<!--jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009" /-->
		</java>
	</target>

	<target name="reload-db" depends="compile-tester-core">
		<java classname="br.ufmg.lcc.arangitester.db.DbUnitController" fork="true" dir="${test.project.dir}" classpathref="arangi-tester-classpath">
			<arg value="reload" />
		</java>
	</target>

	<target name="start-tomcat" if="start-tomcat">
		<xmlproperty file="${basedir}/tester-config.xml" />
		<property name="tester-config.tomcat-users" value="admin:senha:manager" />
		<property name="tomcat.wait" value="false" />
		<echo level="info" message="Tomcat Users: ${tester-config.tomcat-users}" />
		<echo level="info" message="Catalina Home: ${catalina.home}" />
		<echo level="info" message="JVM ARGS: ${jvm.args}" />
		<echo level="info" message="Workspace: ${workspace}" />
		<echo level="info" message="Tomcat Port: ${tomcat.port}" />
		<echo level="info" message="War File: ${war.file}" />
		<echo level="info" message="Tomcat Wait: ${tomcat.wait}" />
		<cargo containerId="tomcat6x" home="${catalina.home}" output="${workspace}/tomcat/output.log" log="${workspace}/cargo.log" action="start" wait="${tomcat.wait}">
			<sysproperty key="LccTestEnv" value="true" />
			<configuration home="${workspace}/tomcat">
				<property name="cargo.servlet.users" value="${tester-config.tomcat-users}" />
				<property name="cargo.jvmargs" value="${jvm.args}" />
				<property name="cargo.servlet.port" value="${tomcat.port}" />
				<property name="cargo.servlet.ajp.port" value="${tomcat.ajp.port}" />
				<property name="cargo.logging" value="high" />
				<deployable type="war" file="${war.file}" />
			</configuration>
		</cargo>
	</target>

	<target name="create-project">
		<input message="Project name" addproperty="project" />
		<input message="Package name" addproperty="package" defaultvalue="com.company.projectname" />
		<input message="Output Dir" addproperty="output" defaultvalue="../" />
		<mkdir dir="${output}/${project}" />
		<copy todir="${output}/${project}" filtering="true">
			<filterset>
				<filter token="project" value="${project}" />
				<filter token="package" value="${package}" />
				<filter token="user.name" value="${user.name}" />
			</filterset>
			<fileset dir="templates/eclipse" includes="**/*" />
		</copy>

		<mkdir dir="${output}/${project}/build" />
		<javac srcdir="src" destdir="${output}/${project}/build" encoding="UTF-8">
			<classpath>
				<fileset dir="lib" includes="**/*.jar" />
			</classpath>
		</javac>
		<mkdir dir="${output}/${project}/lib/src/" />
		<jar destfile="${output}/${project}/lib/${at.name}.jar">
			<fileset dir="${output}/${project}/build" includes="**/*" />
			<fileset dir="../${at.name}/src" includes="**/*" />
		</jar>
		<delete dir="${output}/${project}/build" />

		<copy todir="${output}/${project}/lib">
			<fileset dir="lib" includes="**/*.jar" />
		</copy>
	</target>

	<target name="Update Project Lib">
		<mkdir dir="build" />
		<javac srcdir="../${at.name}/src" destdir="build" encoding="UTF-8">
			<classpath>
				<fileset dir="lib" includes="**/*.jar" />
			</classpath>
		</javac>
		<jar destfile="lib/${at.name}.jar" compress="true">
			<fileset dir="build" includes="**/*" />
			<fileset dir="../${at.name}/src" includes="**/*" />
		</jar>
		<delete dir="build" />
	</target>

	<target name="javadocsUml">
		<mkdir dir="javadoc"/>
		<javadoc sourcepath="src" packagenames="br.*" destdir="javadoc" 
			private="true" encoding="UTF-8">
			<classpath>
				<fileset dir="lib" includes="**/*.jar"/>
			</classpath>
			<doclet name="org.umlgraph.doclet.UmlGraphDoc" path="lib/UmlGraph-5.2.jar">
				<param name="-inferrel" />
				<param name="-inferdep" />
				<param name="-hide" value="java.*" />
				<param name="-collpackages" value="java.util.*" />
				<param name="-qualify" />
				<param name="-postfixpackage" />
				<param name="-nodefontsize" value="9" />
				<param name="-nodefontpackagesize" value="7" />
				<param name="-link" value="http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec" />
				<param name="-link" value="http://java.sun.com/j2se/1.5/docs/api" />
			</doclet>
		</javadoc>
	</target>

</project>